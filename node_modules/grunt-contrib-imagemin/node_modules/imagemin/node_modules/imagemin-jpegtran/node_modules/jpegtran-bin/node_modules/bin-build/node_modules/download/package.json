{
  "name": "download",
  "version": "4.1.2",
  "description": "Download and extract files effortlessly",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/download"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "bin": {
    "download": "cli.js"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "files": [
    "cli.js",
    "index.js"
  ],
  "keywords": [
    "download",
    "extract",
    "http",
    "request",
    "url"
  ],
  "dependencies": {
    "concat-stream": "^1.4.7",
    "each-async": "^1.0.0",
    "filenamify": "^1.0.1",
    "get-stdin": "^4.0.1",
    "got": "^2.3.2",
    "gulp-decompress": "^1.0.2",
    "gulp-rename": "^1.2.0",
    "is-url": "^1.2.0",
    "meow": "^3.0.0",
    "object-assign": "^2.0.0",
    "read-all-stream": "^1.0.2",
    "stream-combiner2": "^1.0.2",
    "through2": "^0.6.1",
    "vinyl": "^0.4.3",
    "vinyl-fs": "^1.0.0",
    "ware": "^1.2.0"
  },
  "devDependencies": {
    "ava": "^0.0.4",
    "nock": "^1.2.1",
    "rimraf": "^2.2.8"
  },
  "readme": "# download [![Build Status](http://img.shields.io/travis/kevva/download.svg?style=flat)](https://travis-ci.org/kevva/download)\n\n> Download and extract files effortlessly\n\n\n## Install\n\n```\n$ npm install --save download\n```\n\n\n## Usage\n\nIf you're fetching an archive you can set `extract: true` in options and\nit'll extract it for you.\n\n```js\nvar Download = require('download');\n\nnew Download({mode: '755'})\n\t.get('http://example.com/foo.zip')\n\t.get('http://example.com/cat.jpg')\n\t.dest('dest');\n\t.run(function (err, files) {\n\t\tconsole.log(files);\n\t\t//=> [{path: 'foo.zip', url: 'http://example.com/foo.zip', contents: <Buffer 50 4b 03>, ...}, ...]\n\t});\n```\n\n\n## API\n\n### new Download(options)\n\nCreates a new `Download` instance.\n\n#### options\n\nType: `object`\n\nOptions for [`got`](https://github.com/sindresorhus/got) or the underlying [`http`](https://nodejs.org/api/http.html#http_http_request_options_callback)/[`https`](https://nodejs.org/api/https.html#https_https_request_options_callback) request can be specified,\nas well as options specific to the `download` module as described below.\n\n##### options.extract\n\nType: `boolean`  \nDefault: `false`\n\nIf set to `true`, try extracting the file using [decompress](https://github.com/kevva/decompress/).\n\n##### options.mode\n\nType: `string`\n\nSet mode on the downloaded file, i.e `{mode: '755'}`.\n\n##### options.strip\n\nType: `number`  \nDefault: `0`\n\nRemove leading directory components from extracted files.\n\n### .get(url, [dest])\n\n#### url\n\nType: `string`\n\nAdd a URL to download.\n\n#### dest\n\nType: `string`\n\nSet an optional destination folder that will take precedence over the one set in \n`.dest()`.\n\n### .dest(dir)\n\n#### dir\n\nType: `string`\n\nSet the destination folder to where your files will be downloaded.\n\n### .rename(name)\n\n#### name\n\nType: `function` or `string`\n\nRename your files using [gulp-rename](https://github.com/hparra/gulp-rename).\n\n### .use(plugin)\n\n#### plugin(response, url)\n\nType: `function`\n\nAdd a plugin to the middleware stack.\n\n##### response\n\nThe [response object](http://nodejs.org/api/http.html#http_http_incomingmessage).\n\n##### url\n\nThe requested URL.\n\n### .run(callback)\n\n#### callback(err, files)\n\nType: `function`\n\n##### files\n\nContains an array of vinyl files.\n\n\n## CLI\n\n```\n$ npm install --global download\n```\n\n```\n$ download --help\n\n  Usage\n    $ download <url>\n    $ download <url> > <file>\n    $ download --out <directory> <url>\n    $ cat <file> | download --out <directory>\n\n  Example\n    $ download http://foo.com/file.zip\n    $ download http://foo.com/cat.png > dog.png\n    $ download --extract --strip 1 --out dest http://foo.com/file.zip\n    $ cat urls.txt | download --out dest\n\n  Options\n    -e, --extract           Try decompressing the file\n    -o, --out               Where to place the downloaded files\n    -s, --strip <number>    Strip leading paths from file names on extraction\n```\n\n\n## License\n\nMIT © [Kevin Mårtensson](http://kevinmartensson.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/kevva/download/issues"
  },
  "homepage": "https://github.com/kevva/download",
  "_id": "download@4.1.2",
  "dist": {
    "shasum": "00ada28d1edd617477be1e5d30990a13df1ab146"
  },
  "_from": "download@^4.0.0",
  "_resolved": "https://registry.npmjs.org/download/-/download-4.1.2.tgz"
}
